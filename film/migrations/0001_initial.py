# Generated by Django 3.2.2 on 2021-05-10 16:29

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseModelExtend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('like_user_set', models.ManyToManyField(blank=True, related_name='like_BaseModelExtend_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagFilm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagPostActor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagPostStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagResumeActor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TagResumeStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ResumeStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20)),
                ('upload', models.FileField(blank=True, upload_to='')),
                ('title', models.CharField(max_length=50)),
                ('tel', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('context', models.TextField()),
                ('resume_url', models.URLField(blank=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tag_set', models.ManyToManyField(blank=True, to='film.TagResumeStaff')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ResumeActor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=20)),
                ('age', models.IntegerField()),
                ('resume_url', models.URLField(blank=True)),
                ('context', models.TextField()),
                ('agency', models.CharField(blank=True, max_length=50)),
                ('image', models.ImageField(upload_to='Resume/Actor/%Y/%m/%d')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tag_set', models.ManyToManyField(blank=True, to='film.TagResumeActor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QnA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('date', models.DateTimeField()),
                ('context', models.TextField()),
                ('is_done', models.BooleanField()),
                ('upload', models.FileField(blank=True, upload_to='Qna/%Y/%m/%d')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HirePostStaff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('thumbs', models.IntegerField(blank=True)),
                ('title', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, upload_to='HirePost/Staff/%Y/%m/%d')),
                ('company', models.CharField(max_length=20)),
                ('company_loca', models.CharField(blank=True, max_length=50)),
                ('company_desc', models.TextField()),
                ('company_url', models.URLField(blank=True)),
                ('job_position', models.CharField(max_length=50)),
                ('detail', models.TextField()),
                ('requirement', models.TextField()),
                ('advantage', models.TextField(blank=True)),
                ('job_loca', models.CharField(blank=True, max_length=100)),
                ('deadline', models.DateTimeField()),
                ('payment', models.IntegerField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tag_set', models.ManyToManyField(blank=True, to='film.TagPostStaff')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HirePostActor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('thumbs', models.IntegerField()),
                ('title', models.CharField(max_length=50)),
                ('image', models.ImageField(blank=True, upload_to='HirePost/Actor/%Y/%m/%d')),
                ('company', models.CharField(max_length=20)),
                ('company_loca', models.CharField(blank=True, max_length=50)),
                ('company_desc', models.TextField()),
                ('company_url', models.URLField(blank=True)),
                ('job_position', models.CharField(max_length=50)),
                ('detail', models.TextField()),
                ('requirement', models.TextField()),
                ('advantage', models.TextField(blank=True)),
                ('job_loca', models.CharField(blank=True, max_length=100)),
                ('deadline', models.DateTimeField()),
                ('payment', models.IntegerField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tag_set', models.ManyToManyField(blank=True, to='film.TagPostActor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FreeBoard',
            fields=[
                ('basemodelextend_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='film.basemodelextend')),
                ('title', models.CharField(max_length=50)),
                ('context', models.TextField()),
                ('image', models.ImageField(blank=True, upload_to='freeboard/%Y/%m/%d')),
                ('hit', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
            bases=('film.basemodelextend',),
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('basemodelextend_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='film.basemodelextend')),
                ('title', models.CharField(max_length=20)),
                ('url', models.URLField(blank=True)),
                ('context', models.TextField()),
                ('country', models.CharField(max_length=50)),
                ('director', models.CharField(max_length=10)),
                ('is_picked', models.BooleanField(default=False)),
                ('on_streaming', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_post_set', to=settings.AUTH_USER_MODEL)),
                ('genre_set', models.ManyToManyField(blank=True, to='film.Genre')),
                ('tag_set', models.ManyToManyField(blank=True, to='film.TagFilm')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            bases=('film.basemodelextend',),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rate', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5)], default=1)),
                ('message', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='film.film')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
    ]
